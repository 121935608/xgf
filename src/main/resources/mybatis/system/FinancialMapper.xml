<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FinancialMapper">

	<resultMap id="FinancialResult" type="Financial">
		<result column="amountId" property="amountId" />
		<result column="userId" property="userId" />
		<result column="addTime" property="addTime" />
		<result column="totalMoney" property="totalMoney" />
		<result column="xzfRate" property="xzfRate" />
		<result column="amountMoney" property="amountMoney" />
		<result column="status" property="status" />
		<result column="storeName" property="storeName" />
		<result column="amountNum" property="amountNum" />
		<result column="amountStatus" property="amountStatus" />
		<result column="updateTime" property="updateTime" />
	</resultMap>

	<select id="pageInfoQuery" parameterType="PageUtilEntity" resultMap="FinancialResult">
		SELECT a.amountId,a.amountNum,s.storeName,a.addTime,a.totalMoney/100 totalMoney,a.xzfRate xzfRate,
		ROUND(IFNULL(a.amountMoney/100,0),2) amountMoney,a.status,a.amountStatus,
		IFNULL(a.closeMoney/100,0) closeMoney,
		IFNULL(a.amountMoney/100,0)-IFNULL(a.closeMoney/100,0) openMoney
		 FROM m_amount a LEFT JOIN t_store s ON a.storeId=s.storeId
		 WHERE 1=1
		 <if test="relationMap.type != null and relationMap.type=='B'.toString()">
			AND a.storeId=#{relationMap.storeId}
		</if>
		<if test="relationMap.beginTime != null and relationMap.beginTime != ''"><!-- 开始时间检索 -->
			AND DATE_FORMAT(a.addTime,'%Y%m%d') &gt;= DATE_FORMAT(#{relationMap.beginTime},'%Y%m%d')
		</if>
		<if test="relationMap.endTime != null and relationMap.endTime != ''"><!-- 结束时间检索 -->
			AND DATE_FORMAT(a.addTime,'%Y%m%d') &lt;= DATE_FORMAT(#{relationMap.endTime},'%Y%m%d')
		</if>
		<if test="relationMap.status !=null and relationMap.status !=''">
			AND a.amountStatus=#{relationMap.status}
		</if>
		<if test="relationMap.storeName !=null and relationMap.storeName !=''">
			AND (
			a.amountNum LIKE CONCAT(CONCAT('%', #{relationMap.storeName}),'%')
			OR
			s.storeName LIKE CONCAT(CONCAT('%', #{relationMap.storeName}),'%')
			)
		</if><!--关键词查询-->
		ORDER BY a.addTime DESC
	</select>

	<update id="updateAmount" parameterType="Financial">
		UPDATE m_amount
		<set>
			<if	test="closeMoney!=null">closeMoney=#{closeMoney}*100,</if>
			updateTime=#{updateTime},amountStatus=#{amountStatus},status=#{status}
		</set>
		WHERE 1=1
		<if test="amountId !=null and amountId !=''">
			AND amountId=#{amountId}
		</if>
	</update>
	
	<select id="getDetail" parameterType="string" resultType="FinancialDetail">
		SELECT d.*,userName FROM m_amount_detail d LEFT JOIN sys_user u  
		ON u.userId=d.userId
		WHERE amountId=#{0} order by addTime desc
	</select>
	
	<select id="getByNum" parameterType="string" resultType="Financial">
		SELECT a.amountId,a.amountNum,s.storeName,a.addTime,a.totalMoney/100 totalMoney,a.xzfRate,
		a.amountMoney/100 amountMoney,a.status,a.amountStatus,a.closeMoney/100 closeMoney,
		round(a.amountMoney/100-IFNULL(a.closeMoney/100,0),2) openMoney
		 FROM m_amount a LEFT JOIN t_store s ON a.userId=s.userId
		 WHERE a.amountId=#{0}
	</select>
	
	<insert id="addAmountDetail" parameterType="FinancialDetail">
		insert into m_amount_detail(amountDetailId,amountId,money,userId,
		<if test="remark != null and remark !=''">remark,</if>
		addTime
		)values(#{amountDetailId},#{amountId},#{money}*100,#{userId},
		<if test="remark != null and remark !=''">#{remark},</if>
		#{addTime}
		)
	</insert>
</mapper> 