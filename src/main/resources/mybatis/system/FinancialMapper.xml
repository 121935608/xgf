<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FinancialMapper">

	<resultMap id="FinancialResult" type="Financial">
		<result column="amountId" property="amountId" />
		<result column="userId" property="userId" />
		<result column="addTime" property="addTime" />
		<result column="totalMoney" property="totalMoney" />
		<result column="xzfRate" property="xzfRate" />
		<result column="amountMoney" property="amountMoney" />
		<result column="status" property="status" />
		<result column="storeName" property="storeName" />
		<result column="amountNum" property="amountNum" />
		<result column="amountStatus" property="amountStatus" />
		<result column="updateTime" property="updateTime" />
	</resultMap>

	<select id="pageInfoQuery" parameterType="PageUtilEntity" resultMap="FinancialResult">
		SELECT ROUND(SUM(planTotal/100),2) totalMoney,s.storeId storeId,
		s.storeName storeName,ROUND(IFNULL(b.remain/100,0),2) closeMoney,
		(SELECT xzfRate FROM sys_setting LIMIT 1) xzfRate,u.mobilePhone mobilePhone
		FROM t_store s LEFT JOIN m_billing b ON s.storeId=b.storeId
		LEFT JOIN t_repay r ON s.userId = r.userId 
		LEFT JOIN sys_user u ON u.userId = s.userId
		WHERE r.status=0
		 <if test="relationMap.type != null and relationMap.type=='B'.toString()">
			AND s.storeId=#{relationMap.storeId}
		</if>
		<if test="relationMap.storeName !=null and relationMap.storeName !=''">
			AND s.storeName LIKE CONCAT(CONCAT('%', #{relationMap.storeName}),'%')
		</if><!--关键词查询-->
		GROUP BY storeName,closeMoney,mobilePhone,s.addTime,s.storeId
		ORDER BY s.storeNo desc
	</select>

	<update id="updateBilling" parameterType="Billing">
		UPDATE m_billing
		<set>
			<if	test="remain!=null">remain=#{remain},</if>
			updateTime=#{updateTime}
		</set>
		WHERE 1=1
		<if test="storeId !=null and storeId !=''">
			AND storeId=#{storeId}
		</if>
	</update>
	
	<select id="getDetail" parameterType="string" resultType="FinancialDetail">
		SELECT d.*,userName FROM m_amount_detail d LEFT JOIN sys_user u  
		ON u.userId=d.userId
		WHERE amountId=#{0} order by addTime desc
	</select>
	
	<select id="getByNum" parameterType="string" resultType="Financial">
		SELECT s.storeId storeId,s.userId,
		s.storeName storeName,ROUND(IFNULL(b.remain/100,0),2) closeMoney,
		(SELECT xzfRate FROM sys_setting LIMIT 1) xzfRate,u.mobilePhone mobilePhone
		FROM t_store s LEFT JOIN (SELECT * FROM m_billing WHERE status =1) b ON s.storeId=b.storeId
		LEFT JOIN sys_user u ON u.userId = s.userId
		WHERE  s.storeId=#{0}
		GROUP BY storeName,closeMoney,mobilePhone,s.addTime,s.storeId,userId
	</select>


	<select id="getTotalMoney" parameterType="string" resultType="BigDecimal">
		SELECT IFNULL(ROUND(SUM(r.planTotal / 100), 2),0.00)totalMoney FROM t_repay r
        inner join t_store s on r.userId=s.userId where s.storeId=#{0} and r.status in (0,3)
	</select>
	
	<insert id="addAmount" parameterType="Financial">
		insert into m_amount(amountId,amountNum,storeId,xzfRate,status,
		<if test="userId != null and userId !=''">userId,</if>
		<if test="totalMoney != null and totalMoney !=''">totalMoney,</if>
		<if test="amountMoney != null and amountMoney !=''">amountMoney,</if>
		<if test="amountMoney != null and amountMoney !=''">closeMoney,</if>
		<if test="remark != null and remark !=''">remark,</if>
		<if test="amountStatus != null and amountStatus !=''">amountType,</if>
		addTime
		)values(#{amountId},#{amountNum},#{storeId},#{xzfRate},#{status},
		<if test="userId != null and userId !=''">#{userId},</if>
		<if test="totalMoney != null and totalMoney !=''">#{totalMoney}*100,</if>
		<if test="amountMoney != null and amountMoney !=''">#{amountMoney}*100,</if>
		<if test="amountMoney != null and amountMoney !=''">#{amountMoney}*100,</if>
		<if test="remark != null and remark !=''">#{remark},</if>
		<if test="amountStatus != null and amountStatus !=''">#{amountStatus},</if>
		#{addTime}
		)
	</insert>
</mapper> 