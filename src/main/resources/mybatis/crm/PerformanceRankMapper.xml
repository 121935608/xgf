<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PerformanceRankMapper">
    <!-- 查询业绩排名 组类，分页 -->
    <select id="pageInfoQuery" parameterType="PageUtilEntity" resultType="HashMap" useCache="false">
        SELECT b.supervisorId,b.supervisorNum,b.deptName,b.deptId,b.`name`,b.province,b.city,b.county,b.area,b.totalPrice,(@i :=@i + 1) AS deptRank
        FROM(
            SELECT ss.supervisorId,ss.supervisorNum,ss.deptId,ss.`name`,cd.deptName,ss.province,ss.city,ss.county,ss.area,IFNULL(tt.allPrice, 0) AS totalPrice
            FROM sys_supervisor ss
            INNER JOIN c_dept cd ON ss.deptId = cd.deptId
            LEFT JOIN (
                SELECT SUM(ta.orderPrice) AS allPrice,ts.supervisorId
                FROM t_order ta
                LEFT JOIN t_store ts ON ta.userId = ts.userId
                WHERE ta.`status` = 1 AND ta.orderStatus != '-1' GROUP BY ts.supervisorId
            ) tt ON ss.supervisorNum = tt.supervisorId
            WHERE 1=1

            <if test="relationMap.userId != null and relationMap.userId != ''">
                AND ss.deptId=(SELECT deptId FROM sys_user WHERE userId =#{relationMap.userId})
            </if>

            <if test="relationMap.city != null and relationMap.city != ''">
                AND ss.city LIKE CONCAT(CONCAT('%', #{relationMap.city}),'%')
            </if>
            <if test="relationMap.province != null and relationMap.province != ''">
                AND ss.province LIKE CONCAT(CONCAT('%', #{relationMap.province}),'%')
            </if>
            <if test="relationMap.county != null and relationMap.county != ''">
                AND ss.county=#{relationMap.county}
            </if>
            <if test="relationMap.deptId != null and relationMap.deptId != ''">
                AND ss.deptId=#{relationMap.deptId}
            </if>
            ORDER BY totalPrice DESC
	    ) AS b,
	    (SELECT @i := 0) AS it
    </select>

    <!-- 查询业绩排名详情supervisorId -->
    <select id="performanceDetails" parameterType="HashMap" resultType="HashMap" useCache="false">
        SELECT 		c.deptName,c.deptRank,c.area,c.name,c.totalPrice,c.supervisorId FROM(
        SELECT b.supervisorId,b.supervisorNum,b.deptName,b.deptId,b.`name`,b.province,b.city,b.county,b.area,b.totalPrice,(@i :=@i + 1) AS deptRank
        FROM(
        SELECT ss.supervisorId,ss.supervisorNum,ss.deptId,ss.`name`,cd.deptName,ss.province,ss.city,ss.county,ss.area,IFNULL(tt.allPrice, 0) AS totalPrice
        FROM sys_supervisor ss
        INNER JOIN c_dept cd ON ss.deptId = cd.deptId
        LEFT JOIN (
        SELECT SUM(ta.orderPrice) AS allPrice,ts.supervisorId
        FROM t_order ta
        LEFT JOIN t_store ts ON ta.userId = ts.userId
        WHERE ta.`status` = 1 AND ta.orderStatus != '-1' GROUP BY ts.supervisorId
        ) tt ON ss.supervisorNum = tt.supervisorId
        WHERE 1=1
        AND ss.deptId=#{deptId}
        ORDER BY totalPrice DESC
        ) AS b ,(SELECT @i := 0) AS it

        ) as c WHERE c.supervisorNum=#{supervisorId}
</select>


<!--业绩信息查询supervisorId-->
    <select id="rankingInfo" resultType="HashMap" parameterType="HashMap">
        SELECT
        IFNULL(SUM(ta.amount), 0) AS amount,
        IFNULL(SUM(tb.storeIdNum), 0) AS storeIdNum,
        IFNULL(SUM(tc.visitStoreNum), 0) AS visitStoreNum,
        IFNULL(SUM(<![CDATA[td.firstStore<2]]>), 0) AS firstStore,
        IFNULL(SUM(te.amount1), 0) AS amount1,
        IFNULL(SUM(tf.storeIdNum1), 0) AS storeIdNum1,
        IFNULL(SUM(tg.visitStoreNum1), 0) AS visitStoreNum1,
        IFNULL(SUM(<![CDATA[th.firstStore1<2]]>), 0) AS firstStore1
        FROM t_store ts
        LEFT JOIN (
            SELECT storeId, SUM(orderPrice) AS amount
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin} AND <![CDATA[orderTime <= #{timeEnd}]]>
            GROUP BY storeId
        ) ta ON ts.storeId = ta.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(DISTINCT storeId) AS storeIdNum
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin} AND <![CDATA[orderTime <= #{timeEnd}]]>
            GROUP BY storeId
        ) tb ON ts.storeId = tb.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(DISTINCT storeId) AS visitStoreNum
            FROM c_visit_record
            WHERE `status` = 0 AND createTime >= #{timeBegin} AND <![CDATA[createTime <= #{timeEnd}]]>
            AND visitResultStatus IS NOT NULL
            GROUP BY storeId
        ) tc ON tc.storeId = ts.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(storeId) AS firstStore
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin} AND <![CDATA[orderTime <= #{timeEnd}]]>
            GROUP BY storeId
        ) td ON td.storeId = ts.storeId
        LEFT JOIN (
            SELECT storeId, SUM(orderPrice) AS amount1
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin1} AND <![CDATA[orderTime <= #{timeEnd1}]]>
            GROUP BY storeId
        ) te ON ts.storeId = te.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(DISTINCT storeId) AS storeIdNum1
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin1} AND <![CDATA[orderTime <= #{timeEnd1}]]>
            GROUP BY storeId
        ) tf ON ts.storeId = tf.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(DISTINCT storeId) AS visitStoreNum1
            FROM c_visit_record
            WHERE `status` = 0 AND createTime >= #{timeBegin1} AND <![CDATA[createTime <= #{timeEnd1}]]>
            AND visitResultStatus IS NOT NULL
            GROUP BY storeId
        ) tg ON tg.storeId = ts.storeId
        LEFT JOIN (
            SELECT storeId, COUNT(storeId) AS firstStore1
            FROM t_order
            WHERE `status` = 1 AND orderTime >= #{timeBegin1} AND <![CDATA[orderTime <= #{timeEnd1}]]>
            GROUP BY storeId
        ) th ON th.storeId = ts.storeId
        WHERE ts.supervisorId = #{supervisorId}
    </select>

    <!--获取部门-->
    <select id="getDept" resultType="Dept">
        SELECT deptId,deptName FROM c_dept
    </select>
</mapper>